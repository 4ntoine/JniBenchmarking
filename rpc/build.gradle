plugins {
  id 'com.android.library'
  id 'kotlin-android'

  // protobuf
  id 'com.google.protobuf'
  id 'com.squareup.wire'
}

android {
  compileSdkVersion 29
  buildToolsVersion "30.0.2"

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    // Warning: make sure you have `/usr/local/bin/grpc_cpp_plugin` installed
    // eg. `brew install grpc` to install it on mac
    // also make sure you switch to protobuf v1.34.0 in `grpc/third_parties/protobuf` manually
    // (by default for grpc 3.14 it's protobuf 1.33.0 and it fails during the compilation).
    externalNativeBuild {
      cmake {
        // The paths to the protoc and grpc_cpp_plugin binaries on the host system (codegen
        // is not cross-compiled to Android)
        def protoc = project.hasProperty('protoc') ?
                project.property('protoc') : '/usr/local/bin/protoc'
        def grpc_cpp_plugin = project.hasProperty('grpc_cpp_plugin') ?
                project.property('grpc_cpp_plugin') : '/usr/local/bin/grpc_cpp_plugin'

        cppFlags "-std=c++14 -frtti -fexceptions"
        arguments '-DANDROID_STL=c++_static'
        arguments '-DRUN_HAVE_POSIX_REGEX=0'
        arguments '-DRUN_HAVE_STD_REGEX=0'
        arguments '-DRUN_HAVE_STEADY_CLOCK=0'
        arguments '-Dprotobuf_BUILD_PROTOC_BINARIES=off'
        arguments '-DgRPC_BUILD_CODEGEN=off'
        arguments '-Dlibrpc_PROTOBUF_PROTOC_EXECUTABLE=' + protoc
        arguments '-Dlibrpc_GRPC_CPP_PLUGIN_EXECUTABLE=' + grpc_cpp_plugin
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }

  externalNativeBuild {
    cmake {
      path 'CMakeLists.txt'
    }
  }

  // configuration for protobuf-lite
  sourceSets {
    main {
      proto {
        srcDir 'src/main/proto_lite'
      }
    }
  }

  packagingOptions {
    exclude "**/*.proto"
  }
}

def grpcVersion = "1.34.0"
def protocVersion = "3.14.0"

dependencies {
  api("com.google.protobuf:protobuf-javalite:$protocVersion") { // lite for protobuf
    exclude module: "protobuf-lite"
  }
  api "com.squareup.wire:wire-runtime:3.5.0" // wire for protobuf
  api "com.squareup.wire:wire-grpc-client:3.5.0" // wire for protobuf (client)
  api "io.grpc:grpc-protobuf-lite:$grpcVersion"
  api "io.grpc:grpc-core:$grpcVersion"
  api "io.grpc:grpc-stub:$grpcVersion"
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  api "io.grpc:grpc-okhttp:${grpcVersion}" // for client
  api "io.grpc:grpc-netty-shaded:${grpcVersion}" // for server

  testImplementation 'junit:junit:4.13.1'
  testImplementation "io.grpc:grpc-netty-shaded:${grpcVersion}"

  androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  androidTestImplementation 'androidx.test:runner:1.3.0'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:$protocVersion"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    }
    javalite {
      artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
    }
  }
  generateProtoTasks {
    all().each { task ->
      task.builtins {
        java {
          option "lite"
        }
        // c++ side is generated during ":rpc:externalNativeBuildDebug" and CMake working
//        cpp {
//          option "lite" // keep in sync with what libprotobuf is used when linking (-lite vs. regular)
//        }
      }

      task.plugins {
        grpc {
          option 'lite'
        }
      }
    }
  }
}

 wire {
   sourcePath {
     srcDir 'src/main/proto_wire'
   }

   kotlin {
     rpcCallStyle = 'blocking'
     rpcRole = 'client'
   } // or `java {}`
 }